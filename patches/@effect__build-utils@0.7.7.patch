diff --git a/main.js b/main.js
index a1bdb101386985ba809e60cc615fd9fe82d408f4..e9d7a30c3a8434402b1de3150dfb2ee409bedcfb 100755
--- a/main.js
+++ b/main.js
@@ -31808,9 +31808,16 @@ var _PackageJson = class _PackageJson extends Class3("PackageJson")({
   version: String$,
   description: String$,
   private: optional(Boolean$, { default: () => false }),
-  publishConfig: optional(Struct({
-    provenance: optional(Boolean$, { default: () => false })
-  })),
+  publishConfig: optional(
+    Struct({
+      provenance: optional(Boolean$, { default: () => false }),
+      executableFiles: optional(Array$(String$), { default: () => [] }),
+    })
+  ),
+  homepage: optional(String$),
+  keywords: optional(Array$(String$)),
+  bugs: optional(Record(String$, String$)),
+  engines: optional(Record(String$, String$)),
   license: String$,
   author: optional(String$),
   repository: Union3(
@@ -31818,29 +31825,24 @@ var _PackageJson = class _PackageJson extends Class3("PackageJson")({
     Struct({
       type: String$,
       url: String$,
-      directory: optional(String$)
+      directory: optional(String$),
     })
   ),
   sideEffects: optional(Array$(String$), {
-    default: () => []
+    default: () => [],
   }),
   dependencies: optional(Record(String$, String$)),
-  peerDependencies: optional(
-    Record(String$, String$)
-  ),
+  peerDependencies: optional(Record(String$, String$)),
   peerDependenciesMeta: optional(
     Record(String$, Struct({ optional: Boolean$ }))
   ),
-  optionalDependencies: optional(
-    Record(String$, String$)
-  ),
+  optionalDependencies: optional(Record(String$, String$)),
   gitHead: optional(String$),
   bin: optional(Unknown),
   effect: optional(EffectConfig, {
-    default: () => EffectConfig.default
-  })
-}) {
-};
+    default: () => EffectConfig.default,
+  }),
+}) {};
 _PackageJson.decode = decodeUnknown2(_PackageJson);
 var PackageJson = _PackageJson;
 var make61 = gen2(function* (_) {
@@ -32050,9 +32052,22 @@ var run11 = gen2(function* (_) {
     addOptional("gitHead");
     addOptional("bin");
     addOptional("bin");
+    addOptional("keywords");
+    addOptional("homepage");
+    addOptional("bugs");
+    addOptional("engines");
     if (ctx.packageJson.publishConfig?.provenance === true) {
       out.publishConfig = { provenance: true };
     }
+    if (
+      ctx.packageJson.publishConfig?.executableFiles !== undefined
+      && ctx.packageJson.publishConfig.executableFiles.length > 0
+    ) {
+      out.publishConfig = {
+        ...out.publishConfig,
+        executableFiles: ctx.packageJson.publishConfig.executableFiles,
+      }
+    }
     if (ctx.hasMainCjs) {
       out.main = "./dist/cjs/index.js";
     }
